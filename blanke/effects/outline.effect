EffectManager.new{
    name='lightray',
    params={
        exposure=1, decay=1, density=1, weight=1, position={0,0}
    },
    shader=[[
extern number exposure = 1.0;
extern number decay = 1.0;
extern number density = 1.0;
extern number weight = 1.0;
extern vec2 position= vec2(0.0,0.0);
extern number NUM_SAMPLES = 100.0 ;

vec4 effect(vec4 color, Image texture, vec2 texture_coords, vec2 pixel_coords)
{
    vec2 deltaTextCoord = vec2( texture_coords - position.xy );
    vec2 textCoo = texture_coords.xy;
    deltaTextCoord *= 1.0 / float(NUM_SAMPLES) * density;
    float illuminationDecay = 1.0;
    vec4 cc = vec4(0.0, 0.0, 0.0, 1.0);

    for(int i=0; i < NUM_SAMPLES ; i++)
    {
        textCoo -= deltaTextCoord;
        vec4 sample = Texel( texture, textCoo );
        sample *= illuminationDecay * weight;
        cc += sample;
        illuminationDecay *= decay;
    }
    cc *= exposure;
    return cc;
}
    ]]
}

EffectManager.new{
    name='edge',
    params={
        inv_screen_size={0, 0}
    },
    shader=[[
extern vec2 inv_screen_size;

vec4 effect(vec4 color, Image tex, vec2 tc, vec2 pixel_coords)
{
    vec2 pixel_size = inv_screen_size;
    color = vec4(1.0);
    // the kernel
    color += 1. * Texel(tex, tc + vec2(pixel_size.x, -pixel_size.y));
    color += 2. * Texel(tex, tc + vec2(0, -pixel_size.y));
    color += 1. *Texel(tex, tc + vec2(pixel_size.x, -pixel_size.y));
    color += -1. * Texel(tex, tc + vec2(-pixel_size.x, pixel_size.y));
    color += -2. * Texel(tex, tc + vec2(0, pixel_size.y));
    color += -1. *Texel(tex, tc + vec2(pixel_size.x, pixel_size.y));

    return color;
}
    ]]
}