EffectManager.new{
    name = "wave",
    params = {time=0, size=15},
    shader = [[
        extern number time;
        extern number size;
        vec4 effect(vec4 color, Image tex, vec2 tc, vec2 pc)
        {
            vec2 p = tc;
            p.x = p.x + sin(p.y * size + time) * 0.03;
            return Texel(tex, p);
        }
    ]]
}

EffectManager.new{
    name = 'ripple',
    params = {},
    shader = [[
    
#ifdef VERTEX
vec4 position( mat4 transform_projection, vec4 vertex_position ) 
{   
    /*
    gl_TexCoord[0] = gl_MultiTexCoord0;
    gl_Position = ftransform();
*/
    return transform_projection*vertex_position;     
}
#endif

#ifdef PIXEL
uniform vec2 screen_size; // Screen resolution
uniform float time; // time in seconds
uniform sampler2D tex0; // scene buffer

vec4 effect( vec4 color, Image texture, vec2 texture_coords, vec2 screen_coords ) 
{
    
  vec2 tc = vec2(2,2);//texture_coords.xy;
  vec2 p = -1.0 + 2.0 * tc;
  float len = length(p);
  vec2 uv = tc + (p/len)*cos(len*12.0-time*4.0)*0.03;
  vec3 col = texture2D(texture,uv).xyz;
  color = vec4(col,1.0);  

  return Texel(texture, texture_coords);
}

/*
    gl_TexCoord[0] -> texture_coords
    gl_FragColor -> color
    resolution -> screen_size
*/

#endif
]]
}
